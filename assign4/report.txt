Assignment 4 Report
Alan Shirk

For each of the interpreter programs, Toylang1, 2, and 3, all test cases are working correctly. In order to test all of the cases quickly, I made a test runner program. After writing fac.toy2, sum.toy2, and add.toy3, I tested those programs manually and the outputs were correct as well. Toylang2 ended up being difficult because I encountered many bugs until I discovered that I needed to modify the Env class that I had copied over from implang. By making prev an instance variable, I avoided the bugs that were being caused by a shared state. Also, I changed lookup to a recursive implementation that traverses the prev chain of environments. The rest of the assignment was quite challenging as well, but it was fun to see the functionality improve with each toylang version. The call function for toylang3 was especially tricky to implement, but I found a clean way to store the evaluated argument values into a list and pair each parameter name with its argument value efficiently using zip. Ultimately, it was very rewarding to learn how to implement lambda functions, multi-statement functions, and functions with multiple arguments.